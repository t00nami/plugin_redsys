#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef TPVVINLIBRARY_SWIFT_H
#define TPVVINLIBRARY_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TPVVInLibrary",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC13TPVVInLibrary18BaseViewController")
@interface BaseViewController : UIViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class DirectPaymentResponseKO;
@class DirectPaymentResponseOK;

SWIFT_PROTOCOL("_TtP13TPVVInLibrary29DirectPaymentResponseDelegate_")
@protocol DirectPaymentResponseDelegate
- (void)responseDirectPaymentKOWithResponse:(DirectPaymentResponseKO * _Nonnull)response;
- (void)responseDirectPaymentOKWithResponse:(DirectPaymentResponseOK * _Nonnull)response;
@end

@class NSNumber;

SWIFT_CLASS("_TtC13TPVVInLibrary23DirectPaymentResponseKO")
@interface DirectPaymentResponseKO : NSObject
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSString * _Nonnull desc;
- (nonnull instancetype)initWithCode:(NSInteger)code desc:(NSString * _Nonnull)desc OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13TPVVInLibrary23DirectPaymentResponseOK")
@interface DirectPaymentResponseOK : NSObject
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSString * _Nonnull desc;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Country;
@property (nonatomic, copy) NSString * _Nonnull Ds_Amount;
@property (nonatomic, copy) NSString * _Nonnull Ds_MerchantData;
@property (nonatomic, copy) NSString * _Nonnull Ds_Currency;
@property (nonatomic, copy) NSString * _Nonnull Ds_Order;
@property (nonatomic, copy) NSString * _Nonnull Ds_MerchantCode;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Type;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Brand;
@property (nonatomic, copy) NSString * _Nonnull Ds_AuthorisationCode;
@property (nonatomic, copy) NSString * _Nonnull Ds_Language;
@property (nonatomic, copy) NSString * _Nonnull Ds_SecurePayment;
@property (nonatomic, copy) NSString * _Nonnull Ds_Response;
@property (nonatomic, copy) NSString * _Nonnull Ds_TransactionType;
@property (nonatomic, copy) NSString * _Nonnull Ds_Terminal;
@property (nonatomic, copy) NSString * _Nonnull Ds_ExpiryDate;
@property (nonatomic, copy) NSString * _Nonnull Ds_Merchant_Identifier;
@property (nonatomic, copy) NSString * _Nonnull Ds_CardNumber;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull Ds_Extra_Params;
- (nonnull instancetype)initWithCode:(NSInteger)code desc:(NSString * _Nonnull)desc Ds_Card_Country:(NSString * _Nonnull)Ds_Card_Country Ds_Amount:(NSString * _Nonnull)Ds_Amount Ds_MerchantData:(NSString * _Nonnull)Ds_MerchantData Ds_Currency:(NSString * _Nonnull)Ds_Currency Ds_Order:(NSString * _Nonnull)Ds_Order Ds_MerchantCode:(NSString * _Nonnull)Ds_MerchantCode Ds_Card_Type:(NSString * _Nonnull)Ds_Card_Type Ds_Card_Brand:(NSString * _Nonnull)Ds_Card_Brand Ds_AuthorisationCode:(NSString * _Nonnull)Ds_AuthorisationCode Ds_Language:(NSString * _Nonnull)Ds_Language Ds_SecurePayment:(NSString * _Nonnull)Ds_SecurePayment Ds_Response:(NSString * _Nonnull)Ds_Response Ds_TransactionType:(NSString * _Nonnull)Ds_TransactionType Ds_Terminal:(NSString * _Nonnull)Ds_Terminal Ds_ExpiryDate:(NSString * _Nonnull)Ds_ExpiryDate Ds_Merchant_Identifier:(NSString * _Nonnull)Ds_Merchant_Identifier Ds_CardNumber:(NSString * _Nonnull)Ds_CardNumber Ds_Extra_Params:(NSDictionary<NSString *, NSString *> * _Nonnull)Ds_Extra_Params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum TransactionType : NSInteger;
@class TPVInAppUIConfig;

SWIFT_CLASS("_TtC13TPVVInLibrary27DirectPaymentViewController")
@interface DirectPaymentViewController : BaseViewController
@property (nonatomic, strong) id <DirectPaymentResponseDelegate> _Nullable delegate;
- (nonnull instancetype)initWithOrderNumber:(NSString * _Nonnull)orderNumber amount:(double)amount productDescription:(NSString * _Nonnull)productDescription transactionType:(enum TransactionType)transactionType identifier:(NSString * _Nonnull)identifier extraParams:(NSDictionary<NSString *, NSString *> * _Nullable)extraParams uiViewConfig:(TPVInAppUIConfig * _Nonnull)uiViewConfig OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
@property (nonatomic, readonly) BOOL shouldAutorotate;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class UITextField;

@interface DirectPaymentViewController (SWIFT_EXTENSION(TPVVInLibrary)) <UITextFieldDelegate>
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


typedef SWIFT_ENUM(NSInteger, EnviromentType, open) {
  EnviromentTypeTest = 0,
  EnviromentTypeIntegration = 1,
  EnviromentTypeReal = 2,
};



typedef SWIFT_ENUM(NSInteger, PaymentMethod, open) {
  PaymentMethodCard = 0,
  PaymentMethodTransfer = 1,
  PaymentMethodDomiciliation = 2,
  PaymentMethodPaypal = 3,
  PaymentMethodOasysWallet = 4,
  PaymentMethodImmediatePayment = 5,
};

@class UIColor;
@class UIFont;

SWIFT_CLASS("_TtC13TPVVInLibrary20PaymentUILabelConfig")
@interface PaymentUILabelConfig : NSObject
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text textColor:(UIColor * _Nonnull)textColor textFont:(UIFont * _Nonnull)textFont OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;

SWIFT_CLASS("_TtC13TPVVInLibrary16TPVInAppUIConfig")
@interface TPVInAppUIConfig : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (TPVInAppUIConfig * _Nonnull)setInfoPaymentLabel:(PaymentUILabelConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setNumberCardLabel:(PaymentUILabelConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setExpireDateLabel:(PaymentUILabelConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setCVVLabel:(PaymentUILabelConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setCancelButtonText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setContinueButtonText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setLogoWithLogo:(UIImage * _Nullable)logo SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setBackgorundViewColorWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setBackgroundImageViewWithImage:(UIImage * _Nullable)image SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13TPVVInLibrary17TPVVConfiguration")
@interface TPVVConfiguration : NSObject
@property (nonatomic, copy) NSString * _Nonnull appLicense;
@property (nonatomic) enum EnviromentType appEnviroment;
@property (nonatomic, copy) NSString * _Nonnull appFuc;
@property (nonatomic, copy) NSString * _Nonnull appTerminal;
@property (nonatomic, copy) NSString * _Nonnull appCurrency;
@property (nonatomic, copy) NSString * _Nonnull appURLKO;
@property (nonatomic, copy) NSString * _Nonnull appURLOK;
@property (nonatomic, copy) NSString * _Nonnull appMerchantGroup;
@property (nonatomic, copy) NSString * _Nonnull appMerchantURL;
@property (nonatomic, copy) NSString * _Nonnull appMerchantData;
@property (nonatomic) enum PaymentMethod appMerchantPayMethods;
@property (nonatomic, copy) NSString * _Nonnull appMerchantName;
@property (nonatomic, copy) NSString * _Nonnull appMerchantTitular;
@property (nonatomic, copy) NSString * _Nonnull appMerchantConsumerLanguage;
@property (nonatomic, copy) NSString * _Nonnull appMerchantDescription;
@property (nonatomic, readonly, copy) NSString * _Nonnull REQUEST_REFERENCE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TPVVConfiguration * _Nonnull shared;)
+ (TPVVConfiguration * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, TransactionType, open) {
  TransactionTypeTraditional = 0,
  TransactionTypeNormal = 1,
  TransactionTypePreauthorization = 2,
  TransactionTypePaymentTypeAuthentication = 3,
};

@protocol WebViewPaymentResponseDelegate;

SWIFT_CLASS("_TtC13TPVVInLibrary24WebViewPaymentController")
@interface WebViewPaymentController : BaseViewController
@property (nonatomic, strong) id <WebViewPaymentResponseDelegate> _Nullable delegate;
- (nonnull instancetype)initWithOrderNumber:(NSString * _Nonnull)orderNumber amount:(double)amount productDescription:(NSString * _Nonnull)productDescription transactionType:(enum TransactionType)transactionType identifier:(NSString * _Nonnull)identifier extraParams:(NSDictionary<NSString *, NSString *> * _Nullable)extraParams OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLoad;
@property (nonatomic, readonly) BOOL shouldAutorotate;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class WKWebView;
@class WKNavigationAction;
@class WKNavigation;

@interface WebViewPaymentController (SWIFT_EXTENSION(TPVVInLibrary)) <WKNavigationDelegate, WKUIDelegate>
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView didStartProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
@end

@class WebViewPaymentResponseKO;
@class WebViewPaymentResponseOK;

SWIFT_PROTOCOL("_TtP13TPVVInLibrary30WebViewPaymentResponseDelegate_")
@protocol WebViewPaymentResponseDelegate
- (void)responsePaymentKOWithResponse:(WebViewPaymentResponseKO * _Nonnull)response;
- (void)responsePaymentOKWithResponse:(WebViewPaymentResponseOK * _Nonnull)response;
@end


SWIFT_CLASS("_TtC13TPVVInLibrary24WebViewPaymentResponseKO")
@interface WebViewPaymentResponseKO : NSObject
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSString * _Nonnull desc;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13TPVVInLibrary24WebViewPaymentResponseOK")
@interface WebViewPaymentResponseOK : NSObject
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSString * _Nonnull desc;
@property (nonatomic, copy) NSString * _Nonnull Ds_Date;
@property (nonatomic, copy) NSString * _Nonnull Ds_Hour;
@property (nonatomic, copy) NSString * _Nonnull Ds_SecurePayment;
@property (nonatomic, copy) NSString * _Nonnull Ds_Amount;
@property (nonatomic, copy) NSString * _Nonnull Ds_Currency;
@property (nonatomic, copy) NSString * _Nonnull Ds_Order;
@property (nonatomic, copy) NSString * _Nonnull Ds_MerchantCode;
@property (nonatomic, copy) NSString * _Nonnull Ds_Terminal;
@property (nonatomic, copy) NSString * _Nonnull Ds_Response;
@property (nonatomic, copy) NSString * _Nonnull Ds_Signature;
@property (nonatomic, copy) NSString * _Nonnull Ds_TransactionType;
@property (nonatomic, copy) NSString * _Nonnull Ds_MerchantData;
@property (nonatomic, copy) NSString * _Nonnull Ds_AuthorisationCode;
@property (nonatomic, copy) NSString * _Nonnull Ds_ExpiryDate;
@property (nonatomic, copy) NSString * _Nonnull Ds_Merchant_Identifier;
@property (nonatomic, copy) NSString * _Nonnull Ds_ConsumerLanguage;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Country;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Brand;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Number;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Type;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull Ds_Extra_Params;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef TPVVINLIBRARY_SWIFT_H
#define TPVVINLIBRARY_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TPVVInLibrary",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC13TPVVInLibrary18BaseViewController")
@interface BaseViewController : UIViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class DirectPaymentResponseKO;
@class DirectPaymentResponseOK;

SWIFT_PROTOCOL("_TtP13TPVVInLibrary29DirectPaymentResponseDelegate_")
@protocol DirectPaymentResponseDelegate
- (void)responseDirectPaymentKOWithResponse:(DirectPaymentResponseKO * _Nonnull)response;
- (void)responseDirectPaymentOKWithResponse:(DirectPaymentResponseOK * _Nonnull)response;
@end

@class NSNumber;

SWIFT_CLASS("_TtC13TPVVInLibrary23DirectPaymentResponseKO")
@interface DirectPaymentResponseKO : NSObject
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSString * _Nonnull desc;
- (nonnull instancetype)initWithCode:(NSInteger)code desc:(NSString * _Nonnull)desc OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13TPVVInLibrary23DirectPaymentResponseOK")
@interface DirectPaymentResponseOK : NSObject
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSString * _Nonnull desc;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Country;
@property (nonatomic, copy) NSString * _Nonnull Ds_Amount;
@property (nonatomic, copy) NSString * _Nonnull Ds_MerchantData;
@property (nonatomic, copy) NSString * _Nonnull Ds_Currency;
@property (nonatomic, copy) NSString * _Nonnull Ds_Order;
@property (nonatomic, copy) NSString * _Nonnull Ds_MerchantCode;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Type;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Brand;
@property (nonatomic, copy) NSString * _Nonnull Ds_AuthorisationCode;
@property (nonatomic, copy) NSString * _Nonnull Ds_Language;
@property (nonatomic, copy) NSString * _Nonnull Ds_SecurePayment;
@property (nonatomic, copy) NSString * _Nonnull Ds_Response;
@property (nonatomic, copy) NSString * _Nonnull Ds_TransactionType;
@property (nonatomic, copy) NSString * _Nonnull Ds_Terminal;
@property (nonatomic, copy) NSString * _Nonnull Ds_ExpiryDate;
@property (nonatomic, copy) NSString * _Nonnull Ds_Merchant_Identifier;
@property (nonatomic, copy) NSString * _Nonnull Ds_CardNumber;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull Ds_Extra_Params;
- (nonnull instancetype)initWithCode:(NSInteger)code desc:(NSString * _Nonnull)desc Ds_Card_Country:(NSString * _Nonnull)Ds_Card_Country Ds_Amount:(NSString * _Nonnull)Ds_Amount Ds_MerchantData:(NSString * _Nonnull)Ds_MerchantData Ds_Currency:(NSString * _Nonnull)Ds_Currency Ds_Order:(NSString * _Nonnull)Ds_Order Ds_MerchantCode:(NSString * _Nonnull)Ds_MerchantCode Ds_Card_Type:(NSString * _Nonnull)Ds_Card_Type Ds_Card_Brand:(NSString * _Nonnull)Ds_Card_Brand Ds_AuthorisationCode:(NSString * _Nonnull)Ds_AuthorisationCode Ds_Language:(NSString * _Nonnull)Ds_Language Ds_SecurePayment:(NSString * _Nonnull)Ds_SecurePayment Ds_Response:(NSString * _Nonnull)Ds_Response Ds_TransactionType:(NSString * _Nonnull)Ds_TransactionType Ds_Terminal:(NSString * _Nonnull)Ds_Terminal Ds_ExpiryDate:(NSString * _Nonnull)Ds_ExpiryDate Ds_Merchant_Identifier:(NSString * _Nonnull)Ds_Merchant_Identifier Ds_CardNumber:(NSString * _Nonnull)Ds_CardNumber Ds_Extra_Params:(NSDictionary<NSString *, NSString *> * _Nonnull)Ds_Extra_Params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum TransactionType : NSInteger;
@class TPVInAppUIConfig;

SWIFT_CLASS("_TtC13TPVVInLibrary27DirectPaymentViewController")
@interface DirectPaymentViewController : BaseViewController
@property (nonatomic, strong) id <DirectPaymentResponseDelegate> _Nullable delegate;
- (nonnull instancetype)initWithOrderNumber:(NSString * _Nonnull)orderNumber amount:(double)amount productDescription:(NSString * _Nonnull)productDescription transactionType:(enum TransactionType)transactionType identifier:(NSString * _Nonnull)identifier extraParams:(NSDictionary<NSString *, NSString *> * _Nullable)extraParams uiViewConfig:(TPVInAppUIConfig * _Nonnull)uiViewConfig OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
@property (nonatomic, readonly) BOOL shouldAutorotate;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class UITextField;

@interface DirectPaymentViewController (SWIFT_EXTENSION(TPVVInLibrary)) <UITextFieldDelegate>
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


typedef SWIFT_ENUM(NSInteger, EnviromentType, open) {
  EnviromentTypeTest = 0,
  EnviromentTypeIntegration = 1,
  EnviromentTypeReal = 2,
};



typedef SWIFT_ENUM(NSInteger, PaymentMethod, open) {
  PaymentMethodCard = 0,
  PaymentMethodTransfer = 1,
  PaymentMethodDomiciliation = 2,
  PaymentMethodPaypal = 3,
  PaymentMethodOasysWallet = 4,
  PaymentMethodImmediatePayment = 5,
};

@class UIColor;
@class UIFont;

SWIFT_CLASS("_TtC13TPVVInLibrary20PaymentUILabelConfig")
@interface PaymentUILabelConfig : NSObject
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text textColor:(UIColor * _Nonnull)textColor textFont:(UIFont * _Nonnull)textFont OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;

SWIFT_CLASS("_TtC13TPVVInLibrary16TPVInAppUIConfig")
@interface TPVInAppUIConfig : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (TPVInAppUIConfig * _Nonnull)setInfoPaymentLabel:(PaymentUILabelConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setNumberCardLabel:(PaymentUILabelConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setExpireDateLabel:(PaymentUILabelConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setCVVLabel:(PaymentUILabelConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setCancelButtonText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setContinueButtonText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setLogoWithLogo:(UIImage * _Nullable)logo SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setBackgorundViewColorWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (TPVInAppUIConfig * _Nonnull)setBackgroundImageViewWithImage:(UIImage * _Nullable)image SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13TPVVInLibrary17TPVVConfiguration")
@interface TPVVConfiguration : NSObject
@property (nonatomic, copy) NSString * _Nonnull appLicense;
@property (nonatomic) enum EnviromentType appEnviroment;
@property (nonatomic, copy) NSString * _Nonnull appFuc;
@property (nonatomic, copy) NSString * _Nonnull appTerminal;
@property (nonatomic, copy) NSString * _Nonnull appCurrency;
@property (nonatomic, copy) NSString * _Nonnull appURLKO;
@property (nonatomic, copy) NSString * _Nonnull appURLOK;
@property (nonatomic, copy) NSString * _Nonnull appMerchantGroup;
@property (nonatomic, copy) NSString * _Nonnull appMerchantURL;
@property (nonatomic, copy) NSString * _Nonnull appMerchantData;
@property (nonatomic) enum PaymentMethod appMerchantPayMethods;
@property (nonatomic, copy) NSString * _Nonnull appMerchantName;
@property (nonatomic, copy) NSString * _Nonnull appMerchantTitular;
@property (nonatomic, copy) NSString * _Nonnull appMerchantConsumerLanguage;
@property (nonatomic, copy) NSString * _Nonnull appMerchantDescription;
@property (nonatomic, readonly, copy) NSString * _Nonnull REQUEST_REFERENCE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TPVVConfiguration * _Nonnull shared;)
+ (TPVVConfiguration * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, TransactionType, open) {
  TransactionTypeTraditional = 0,
  TransactionTypeNormal = 1,
  TransactionTypePreauthorization = 2,
  TransactionTypePaymentTypeAuthentication = 3,
};

@protocol WebViewPaymentResponseDelegate;

SWIFT_CLASS("_TtC13TPVVInLibrary24WebViewPaymentController")
@interface WebViewPaymentController : BaseViewController
@property (nonatomic, strong) id <WebViewPaymentResponseDelegate> _Nullable delegate;
- (nonnull instancetype)initWithOrderNumber:(NSString * _Nonnull)orderNumber amount:(double)amount productDescription:(NSString * _Nonnull)productDescription transactionType:(enum TransactionType)transactionType identifier:(NSString * _Nonnull)identifier extraParams:(NSDictionary<NSString *, NSString *> * _Nullable)extraParams OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLoad;
@property (nonatomic, readonly) BOOL shouldAutorotate;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class WKWebView;
@class WKNavigationAction;
@class WKNavigation;

@interface WebViewPaymentController (SWIFT_EXTENSION(TPVVInLibrary)) <WKNavigationDelegate, WKUIDelegate>
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView didStartProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
@end

@class WebViewPaymentResponseKO;
@class WebViewPaymentResponseOK;

SWIFT_PROTOCOL("_TtP13TPVVInLibrary30WebViewPaymentResponseDelegate_")
@protocol WebViewPaymentResponseDelegate
- (void)responsePaymentKOWithResponse:(WebViewPaymentResponseKO * _Nonnull)response;
- (void)responsePaymentOKWithResponse:(WebViewPaymentResponseOK * _Nonnull)response;
@end


SWIFT_CLASS("_TtC13TPVVInLibrary24WebViewPaymentResponseKO")
@interface WebViewPaymentResponseKO : NSObject
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSString * _Nonnull desc;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13TPVVInLibrary24WebViewPaymentResponseOK")
@interface WebViewPaymentResponseOK : NSObject
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSString * _Nonnull desc;
@property (nonatomic, copy) NSString * _Nonnull Ds_Date;
@property (nonatomic, copy) NSString * _Nonnull Ds_Hour;
@property (nonatomic, copy) NSString * _Nonnull Ds_SecurePayment;
@property (nonatomic, copy) NSString * _Nonnull Ds_Amount;
@property (nonatomic, copy) NSString * _Nonnull Ds_Currency;
@property (nonatomic, copy) NSString * _Nonnull Ds_Order;
@property (nonatomic, copy) NSString * _Nonnull Ds_MerchantCode;
@property (nonatomic, copy) NSString * _Nonnull Ds_Terminal;
@property (nonatomic, copy) NSString * _Nonnull Ds_Response;
@property (nonatomic, copy) NSString * _Nonnull Ds_Signature;
@property (nonatomic, copy) NSString * _Nonnull Ds_TransactionType;
@property (nonatomic, copy) NSString * _Nonnull Ds_MerchantData;
@property (nonatomic, copy) NSString * _Nonnull Ds_AuthorisationCode;
@property (nonatomic, copy) NSString * _Nonnull Ds_ExpiryDate;
@property (nonatomic, copy) NSString * _Nonnull Ds_Merchant_Identifier;
@property (nonatomic, copy) NSString * _Nonnull Ds_ConsumerLanguage;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Country;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Brand;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Number;
@property (nonatomic, copy) NSString * _Nonnull Ds_Card_Type;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull Ds_Extra_Params;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
